<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用hexo和github page 搭建免费blog系统</title>
      <link href="/2023/01/20/%E4%BD%BF%E7%94%A8hexo%E5%92%8Cgithub-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9blog%E7%B3%BB%E7%BB%9F/"/>
      <url>/2023/01/20/%E4%BD%BF%E7%94%A8hexo%E5%92%8Cgithub-%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9blog%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>我的blog一直使用wordpress。服务器一直也蹭朋友的服务器。朋友的服务器终于要停服了。 我也需要为我很少更新blog找一个永不停服的服务器了。<br>最终选定方案为白嫖github page。 使用hexo创建静态的blog页面，然后通过github page免费发布，通过cloudflare CDN进行加加速。  </p><h3 id="hexo-创建静态blog"><a href="#hexo-创建静态blog" class="headerlink" title="hexo 创建静态blog"></a>hexo 创建静态blog</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yarn global add hexo-cli  #全局安装hexo</span><br><span class="line">mkdir blog &amp;&amp; cd blog #创建一个空目录</span><br><span class="line">hexo init #初始一个空项目</span><br><span class="line">yarn install #更新依赖</span><br><span class="line">hexo new &quot;使用hexo和github 搭建免费blog系统&quot; #创建一个新文章</span><br><span class="line">yarn server # 启动本地服务查看blog页面</span><br></pre></td></tr></table></figure><h3 id="github-配置"><a href="#github-配置" class="headerlink" title="github 配置"></a>github 配置</h3><p>在github创建一个公开项目。将刚创建项目提交github。<br>在github action 创建hexo编译发布脚本。<br>创建 deploy， 脚本每次master有提交时进行编译，然后将编译结果提交到blog分支。代码如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This is a basic workflow to help you get started with Actions</span></span><br><span class="line"></span><br><span class="line"><span class="attr">name:</span> <span class="string">Blog</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Controls when the workflow will run</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="comment"># Triggers the workflow on push or pull request events but only for the main branch</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span> [ <span class="string">master</span> ]</span><br><span class="line"></span><br><span class="line">  <span class="comment"># Allows you to run this workflow manually from the Actions tab</span></span><br><span class="line">  <span class="attr">workflow_dispatch:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A workflow run is made up of one or more jobs that can run sequentially or in parallel</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="comment"># This workflow contains a single job called &quot;build&quot;</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="comment"># The type of runner that the job will run on</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Steps represent a sequence of tasks that will be executed as part of the job</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="comment"># Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v3</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># Runs a set of commands using the runners shell</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">Node</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="number">16</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Hexo</span> <span class="string">build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          yarn install</span></span><br><span class="line"><span class="string">          yarn clean</span></span><br><span class="line"><span class="string">          yarn build</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">blog</span> <span class="string">deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">blog</span></span><br><span class="line">          <span class="attr">cname:</span> <span class="string">blog.zhangwenjin.com</span></span><br></pre></td></tr></table></figure><h4 id="github-page配置"><a href="#github-page配置" class="headerlink" title="github page配置"></a>github page配置</h4><p>如图所示<br><img src="/images/github_page_setting.png" alt="img"></p><h3 id="cloudflare-配置"><a href="#cloudflare-配置" class="headerlink" title="cloudflare 配置"></a>cloudflare 配置</h3><p>在DNS中开启 Proxied 即可<br>如果启用了https，需要在在ssl配置中启用full模式，即github负责申请https证书，cloudflare负责转发</p>]]></content>
      
      
      
        <tags>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos 配置蓝牙共享网络</title>
      <link href="/2015/12/23/centos-%E9%85%8D%E7%BD%AE%E8%93%9D%E7%89%99%E5%85%B1%E4%BA%AB%E7%BD%91%E7%BB%9C/"/>
      <url>/2015/12/23/centos-%E9%85%8D%E7%BD%AE%E8%93%9D%E7%89%99%E5%85%B1%E4%BA%AB%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<p>安装centos蓝牙库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install bluez.x86_64 bluez-compat.x86_64</span><br></pre></td></tr></table></figure><p>安装蓝牙认证库:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install pygobject2 dbus-python-devel.x86_64 dbus-python</span><br></pre></td></tr></table></figure><p>配置dhcpd：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/dhcp/dhcpd.conf</span><br><span class="line"></span><br><span class="line">ignore client-updates;</span><br><span class="line"></span><br><span class="line">subnet 10.0.0.0 netmask 255.255.255.0 &#123;</span><br><span class="line">    option routers      10.0.0.1;</span><br><span class="line">    option subnet-mask  255.255.255.0;</span><br><span class="line">    option domain-name-servers 10.16.0.222;</span><br><span class="line"></span><br><span class="line">    range dynamic-bootp 10.0.0.10 10.0.0.50;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上网设置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">brctl addbr pan1</span><br><span class="line">brctl stp pan1 off</span><br><span class="line">echo &quot;1&quot;&gt;/proc/sys/net/ipv4/ip_forward</span><br><span class="line">ifconfig pan1 10.0.0.1/24</span><br><span class="line">iptables -A POSTROUTING -s 10.0.0.0/24 -j MASQUERADE</span><br><span class="line">#iptables -D FORWARD 1</span><br><span class="line">#watch -n 1 iptables  -L -n -v</span><br><span class="line">/etc/init.d/dhcpd restart</span><br><span class="line"></span><br><span class="line">hciconfig hci0 up piscan</span><br><span class="line">modprobe bnep</span><br><span class="line">pand --listen --role NAP --master</span><br><span class="line">nohup python /root/src/simple-agent.py &gt; /tmp/blue-agent.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>阿里云gre模式组网</title>
      <link href="/2015/11/25/%E9%98%BF%E9%87%8C%E4%BA%91gre%E6%A8%A1%E5%BC%8F%E7%BB%84%E7%BD%91/"/>
      <url>/2015/11/25/%E9%98%BF%E9%87%8C%E4%BA%91gre%E6%A8%A1%E5%BC%8F%E7%BB%84%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<p>问题：公司租用多台阿里云主机，只有1台对外服务，其他服务器只能访问内网。内网机器偶尔需要访问外网，但又不希望开通外网访问权限。<br>解决方案：将阿里云服务器重新组建一个虚拟局域网，有外网权限的服务器做为网关，其他内网服务器通过网关就能访问外部网络。  </p><p>穿透阿里的内网可选用ipip tunnel 或者gre模式，本文选用通用性比较好的gre模式。  </p><p>外网机器：<br>a. 打开ipv4转发：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure><p>b. 增加转发规则：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.122.0/24 ! -d 192.168.122.0/24 -j MASQUERADE</span><br></pre></td></tr></table></figure><p>c. 建立内网隧道：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">modprobe ip_gre  #加载gre内核模块</span><br><span class="line">ip tunnel add gre3 mode gre remote 10.10.10.3 local 10.10.10.2  ttl 64  #建立隧道</span><br><span class="line">ip link set gre3 up #启动虚拟网卡</span><br><span class="line">ip addr add 192.168.122.2 peer 192.168.122.3 dev gre3 #设定路由</span><br></pre></td></tr></table></figure><p>内网需要上网机器：<br>a. 建立隧道</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">modprobe ip_gre  #加载gre内核模块</span><br><span class="line">ip tunnel add gre1 mode gre remote 10.10.10.2 local 10.10.10.3  ttl 64  #建立隧道</span><br><span class="line">ip link set gre1 up #启动虚拟网卡</span><br><span class="line">ip addr add 192.168.122.3 peer 192.168.122.2 dev gre1 #设定路由</span><br></pre></td></tr></table></figure><p>b. 设定默认路由</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">route del default</span><br><span class="line">route add default gw 192.168.122.2</span><br></pre></td></tr></table></figure><p>ps停用隧道方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ip link set gre1 down</span><br><span class="line">ip tunnel del gre1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器运维相关总结</title>
      <link href="/2015/11/17/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3%E6%80%BB%E7%BB%93/"/>
      <url>/2015/11/17/%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E7%BB%B4%E7%9B%B8%E5%85%B3%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<ol><li>rsyncd 服务搭建</li></ol><ul><li>vim &#x2F;etc&#x2F;rsyncd.conf 配置文件内容<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">uid = root                         </span><br><span class="line">gid = root                                  </span><br><span class="line">use chroot = no                     </span><br><span class="line">read only = yes                            </span><br><span class="line"></span><br><span class="line">#limit access to private LANs</span><br><span class="line">hosts allow=10.10.1.2,10.10.1.3</span><br><span class="line">hosts deny=*                                </span><br><span class="line">max connections = 5                      </span><br><span class="line"></span><br><span class="line">pid file = /var/run/rsyncd.pid             </span><br><span class="line"></span><br><span class="line">#This will give you a separate log file</span><br><span class="line">log file = /opt/logs/rsync.log               </span><br><span class="line"></span><br><span class="line">#This will log every file transferred - up to 85,000+ per user, per sync</span><br><span class="line">transfer logging = yes                    </span><br><span class="line"></span><br><span class="line">log format = %t %a %m %f %b</span><br><span class="line">syslog facility = local3</span><br><span class="line">timeout = 300</span><br><span class="line"></span><br><span class="line"># MODULE OPTIONS</span><br><span class="line">[test]                               </span><br><span class="line">path = /opt/test                      </span><br><span class="line">list=yes                                   </span><br><span class="line">ignore errors                              </span><br><span class="line">comment = test                 </span><br><span class="line">exclude = .svn</span><br></pre></td></tr></table></figure></li><li>启动服务rsync 服务<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall rsync;/usr/bin/rsync --daemon</span><br></pre></td></tr></table></figure></li><li>客户端同步<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avzP rsync://10.132.35.216/test /opt/test</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li>配置http代理(使用epel源)<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum install 3proxy</span><br><span class="line">a. vim /etc/3proxy.cfg</span><br><span class="line">nscache 1000</span><br><span class="line">timeouts 1 5 30 60 180 1800 15 60</span><br><span class="line"></span><br><span class="line">daemon</span><br><span class="line">log /opt/logs/3proxy.log D</span><br><span class="line">logformat &quot;- +_L%t.%.  %N.%p %E %U %C:%c %R:%r %O %I %h %T&quot;</span><br><span class="line">rotate 2</span><br><span class="line"> </span><br><span class="line">auth iponly</span><br><span class="line">allow * 10.10.0.0/16 * *</span><br><span class="line">proxy -n -a -p6666</span><br></pre></td></tr></table></figure></li><li>客户端启用http代理</li></ol><ul><li>wget 等代理<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy=http://10.10.1.2:6666</span><br></pre></td></tr></table></figure></li><li>yum 启用http代理 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.conf</span><br><span class="line"></span><br><span class="line">[main]</span><br><span class="line">proxy=http://10.10.1.2:6666</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>https 自签名证书</title>
      <link href="/2015/10/16/https-%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
      <url>/2015/10/16/https-%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<p>公司需要将外网接口全部改为https方式，保证客户端数据传输的安全。并且将客户端连接改为长连接，这样能同时保证传输效率。客户端是自己的代码，所以使用自己的签名就行。  </p><h3 id="https自签名步骤："><a href="#https自签名步骤：" class="headerlink" title="https自签名步骤："></a>https自签名步骤：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -des3 -out server.orig.key 2048 ＃生成密钥</span><br><span class="line">openssl rsa -in server.orig.key -out server.key #去除密钥中的密码</span><br><span class="line">openssl req -new -subj &quot;/C=CN/ST=Beijing/L=Beijing/O=Beijing/OU=wefit/CN=*.wefit.com.cn&quot; -key server.key -out server.csr #生成公钥</span><br><span class="line">openssl x509 -req -days 36500 -in server.csr -signkey server.key -out server.crt #公钥签名生成证书</span><br></pre></td></tr></table></figure><p>证书签名可选配置(可以不选，这里列出只是备注下)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[req]</span><br><span class="line">req_extensions = v3_req</span><br><span class="line"></span><br><span class="line">distinguished_name = req_distinguished_name</span><br><span class="line"></span><br><span class="line">[req_distinguished_name]</span><br><span class="line"></span><br><span class="line">[ v3_req ]</span><br><span class="line"></span><br><span class="line"># Extensions to add to a certificate request</span><br><span class="line"></span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1 = *.wefit.com.cn</span><br></pre></td></tr></table></figure><p>nginx 配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listen 443 ssl;</span><br><span class="line">ssl_certificate /opt/ca/server.crt;</span><br><span class="line">ssl_certificate_key /opt/ca/server.key;</span><br></pre></td></tr></table></figure><p>一切ok。客户端长连接略过。强烈推荐python urllib3模块</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx 统计请求数模块ngx_req_status</title>
      <link href="/2015/10/12/nginx-%E7%BB%9F%E8%AE%A1%E8%AF%B7%E6%B1%82%E6%95%B0%E6%A8%A1%E5%9D%97ngx-req-status/"/>
      <url>/2015/10/12/nginx-%E7%BB%9F%E8%AE%A1%E8%AF%B7%E6%B1%82%E6%95%B0%E6%A8%A1%E5%9D%97ngx-req-status/</url>
      
        <content type="html"><![CDATA[<p>公司服务器需要监控网站页面请求。<br>使用nginx的ngx_req_status模块刚好能满足需求。<br>请求结果如下：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zone_name key max_active max_bw traffic requests active bandwidth</span><br><span class="line">server_name localhost 2 0 4160 4 1 0</span><br><span class="line">server_url localhost/ 2 0 1432 2 0 0</span><br><span class="line">server_url localhost/req-status 1 0 2728 2 1 0</span><br></pre></td></tr></table></figure><p>可以显示每个url pv, 活跃连接数等等。<br>安装方法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.8.0.tar.gz</span><br><span class="line">git clone https://github.com/zls0424/ngx_req_status.git</span><br><span class="line">tar -zxvf nginx-1.8.0.tar.gz </span><br><span class="line">cd nginx-1.8.0</span><br><span class="line">patch -p1 &lt; /home/zhangwenjin/src/ngx_req_status/write_filter-1.7.11.patch</span><br><span class="line">./configure --prefix=/usr/local/nginx --add-module=/home/zhangwenjin/src/ngx_req_status</span><br><span class="line">make -j2</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>nginx配置如下：<br>http配置：  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">req_status_zone server_name $server_name 256k;</span><br><span class="line">req_status_zone server_url  $server_name$request_uri$query_string 256k;</span><br><span class="line">req_status server_name  server_url;</span><br></pre></td></tr></table></figure><p>server配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /req-status &#123;</span><br><span class="line">    req_status_show on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
            <tag> NGINX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客升级为https</title>
      <link href="/2015/10/09/%E5%8D%9A%E5%AE%A2%E5%8D%87%E7%BA%A7%E4%B8%BAhttps/"/>
      <url>/2015/10/09/%E5%8D%9A%E5%AE%A2%E5%8D%87%E7%BA%A7%E4%B8%BAhttps/</url>
      
        <content type="html"><![CDATA[<p>网站升级为https<br>最近比较流行https，我也准备吧自己博客升级为https。  </p><h3 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h3><p>申请证书参考 <a href="http://www.freehao123.com/nginx-startssl/">http://www.freehao123.com/nginx-startssl/</a><br>StartSSL 网站提供免费的证书申请。  </p><h3 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h3><p>将startssl提供的.key文件和.crt文件拷贝到服务器   </p><p>.key文件每次nginx启动时候需要输入密码，因此需要先去掉.key文件的密码。方法如下：  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsa -in zhangwenjin.key -out zhangwenjin.key.unsecure</span><br></pre></td></tr></table></figure><p>nginx 配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen       443;</span><br><span class="line">ssl on;</span><br><span class="line">ssl_certificate /root/zhangwenjin.crt;</span><br><span class="line">ssl_certificate_key /root/zhangwenjin.key.unsecure;</span><br><span class="line">ssl_session_timeout 5m;</span><br></pre></td></tr></table></figure><p>访问 <a href="https://blog.zhangwenjin.com/">https://blog.zhangwenjin.com</a> 即可 </p><h4 id="开启OCSP-Stapling"><a href="#开启OCSP-Stapling" class="headerlink" title="开启OCSP Stapling"></a>开启OCSP Stapling</h4><p>获取startssl根证书  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O - https://www.startssl.com/certs/ca.pem https://www.startssl.com/certs/sub.class1.server.ca.pem | tee -a ca-certs.pem&amp;gt; /dev/null</span><br></pre></td></tr></table></figure><p>nginx 配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssl_stapling on;</span><br><span class="line">ssl_stapling_verify on;</span><br><span class="line">ssl_trusted_certificate /home/www/zhangwenjin.com/crtca-certs.pem;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Phalcon 学习</title>
      <link href="/2015/09/17/Phalcon-%E5%AD%A6%E4%B9%A0/"/>
      <url>/2015/09/17/Phalcon-%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>Phalcon 是开源、全功能栈、使用C 扩展编写、针对高性能优化的PHP 5 框架  </p><h3 id="Phalcon安装："><a href="#Phalcon安装：" class="headerlink" title="Phalcon安装："></a>Phalcon安装：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; git clone --depth=1 git://github.com/phalcon/cphalcon.git</span><br><span class="line">&gt; cd cphalcon/build</span><br><span class="line">&gt; sudo ./install</span><br><span class="line">add &quot;extension=phalcon.so&quot; to phalcon.ini</span><br></pre></td></tr></table></figure><p>安裝phalcon dev tool</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; git clone https://github.com/phalcon/phalcon-devtools</span><br><span class="line">&gt; ./phalcon-devtools/phalcon.sh</span><br><span class="line">&gt; ln -s ~/phalcon-devtools/phalcon.php /usr/bin/phalcon</span><br><span class="line">&gt; chmod ugo+x /usr/bin/phalcon</span><br></pre></td></tr></table></figure><p>创建项目</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; phalcon project test</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>centos 软RAID使用</title>
      <link href="/2015/08/05/centos-%E8%BD%AFRAID%E4%BD%BF%E7%94%A8/"/>
      <url>/2015/08/05/centos-%E8%BD%AFRAID%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>本次选用raid1方案，其实就是数据互备，最大限度保障数据安全。<br>raid 磁盘 &#x2F;dev&#x2F;sdb &#x2F;dev&#x2F;sdc</p><ol><li><p>安装raid管理软件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; yum install -y parted mdadm</span><br></pre></td></tr></table></figure></li><li><p>将raid磁盘设置为raid格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; fdisk /dev/sdb</span><br><span class="line">&gt;&gt; n # 回车</span><br><span class="line">&gt;&gt; p # 回车</span><br><span class="line">&gt;&gt; 一直回车</span><br><span class="line">&gt;&gt; t # 回车</span><br><span class="line">&gt;&gt; fd # 输入设置raid格式</span><br><span class="line">&gt;&gt; w # 保持并推出</span><br><span class="line">/dev/sdc 也相同操作方式</span><br></pre></td></tr></table></figure></li><li><p>创建raid<br>在操作之前先来看看这个命令的参数</p></li></ol><ul><li>-C #创建软件RAID</li><li>-l #指定RAID级别</li><li>-n #指定磁盘个数</li><li>-x #指定备用设备个数<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mdadm -C /dev/md1 -l 1 -n 2 /dev/sdb1 /dev/sdc1</span><br></pre></td></tr></table></figure></li></ul><ol start="4"><li>开机自动<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mdadm -Evs &gt;&gt; /etc/mdadm.conf</span><br></pre></td></tr></table></figure></li><li>查看详情<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mdadm --detail /dev/md1</span><br></pre></td></tr></table></figure></li><li>格式化<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mkfs.ext4 /dev/md1</span><br></pre></td></tr></table></figure></li><li>挂载<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; mkdir /data</span><br><span class="line">&gt; mount /dev/md1 /data</span><br></pre></td></tr></table></figure></li><li>设置开机自动挂载<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; echo &quot;/dev/md1 /raid1 ext4 defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mariadb 启动两个进程</title>
      <link href="/2015/07/28/mariadb-%E5%90%AF%E5%8A%A8%E4%B8%A4%E4%B8%AA%E8%BF%9B%E7%A8%8B/"/>
      <url>/2015/07/28/mariadb-%E5%90%AF%E5%8A%A8%E4%B8%A4%E4%B8%AA%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>业务需要在一台机器上启动两个mysql进程。<br>解决方案有两种：  </p><ol><li>方案一：将mysql启动脚本copy一份，指向不同目录</li><li>方案二：使用mysqld_multi 管理启动多个实例。</li></ol><p>最终我选用方案一。  </p><h3 id="方案一："><a href="#方案一：" class="headerlink" title="方案一："></a>方案一：</h3><ol><li>创建新数据文件目录：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="built_in">mkdir</span> -p /opt/mysql/jira_db_4406</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="built_in">chown</span> -R mysql:mysql /opt/mysql/mysql</span></span><br></pre></td></tr></table></figure></li><li>初始化目录<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">mysql_install_db --datadir=/opt/mysql/jira_db_4406 --user=mysql</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="built_in">cp</span> /etc/my.cnf /opt/mysql/jira_db_4406</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="built_in">cp</span> /etc/init.d/mysql /etc/init.d/mysql_jira</span></span><br></pre></td></tr></table></figure></li><li>修改&#x2F;opt&#x2F;mysql&#x2F;jira_db_4406&#x2F;my.cnf 中端口号</li><li>修改启动脚本 &#x2F;etc&#x2F;init.d&#x2F;mysql_jira<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$</span><span class="language-bash">bindir/mysqld_safe --defaults-file=/opt/mysql/jira_db_4406/my.cnf --datadir=<span class="string">&quot;<span class="variable">$datadir</span>&quot;</span> --pid-file=<span class="string">&quot;<span class="variable">$mysqld_pid_file_path</span>&quot;</span> <span class="variable">$other_args</span> &gt;/dev/null 2&gt;&amp;1</span></span><br></pre></td></tr></table></figure><blockquote><p>(ps:重点加–defaults-file&#x3D;&#x2F;opt&#x2F;mysql&#x2F;jira_db_4406&#x2F;my.cnf –defaults-file 一定要是第一个参数)</p></blockquote></li><li>启动<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; /etc/init.d/mysql_jira start</span><br><span class="line">&gt; chkconfig --level 3 mysql_jira on</span><br></pre></td></tr></table></figure></li><li>修改默认密码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mysqladmin -u root password 123456</span><br></pre></td></tr></table></figure></li><li>支持远程登录<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; mysql -h 127.0.0.1 -P 4406 -u root -p</span><br><span class="line">mysql &gt; GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED BY &#x27;123456&#x27; WITH GRANT OPTION;</span><br><span class="line">mysql &gt; flush privileges;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>公司vpn配置</title>
      <link href="/2015/07/17/%E5%85%AC%E5%8F%B8vpn%E9%85%8D%E7%BD%AE/"/>
      <url>/2015/07/17/%E5%85%AC%E5%8F%B8vpn%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h3 id="服务器："><a href="#服务器：" class="headerlink" title="服务器："></a>服务器：</h3><p>公网服务器A(ip:121.199.x.x) centos6<br>内网测试服务器B(ip:10.10.1.160) centos6<br>网络：</p><p>公网 121.199.x.x&#x2F;24<br>内网 10.10.1.1&#x2F;24<br>vpn网络 10.10.16.1&#x2F;24  </p><p>需求：</p><p>公网服务器A需要能访问内网，因为svn服务器在内网。<br>vpn拨号后需要能访问到内网<br>方案：</p><p>vpn 服务架设在公网服务器A上（有公网ip）,并分配vpn IP：10.10.16.1，<br>内网测试服务器B vpn拨号连接到服务器A，分配vpn ip：10.10.16.2，虚拟网卡ppp0<br>服务器A增加路由增加内网ip 10.10.1.1&#x2F;24 路由到 10.10.16.2<br>内网测试服务器B增加转发规则将ppp0流量转发到内网  </p><h3 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h3><ol><li>开启公网服务器A和内网测试服务器B的ip_forward<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vim /etc/sysctl.conf</span></span><br><span class="line">net.ipv4.ip_forward=1</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">sysctl -p</span></span><br></pre></td></tr></table></figure></li><li>在公网服务器A安装vpn服务<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">yum install pptpd.x86_64</span></span><br></pre></td></tr></table></figure>配置：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vim /etc/pptpd.conf</span></span><br><span class="line">localip 10.10.16.1</span><br><span class="line">remoteip 10.10.16.3-20,10.10.16.245</span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vim /etc/ppp/options.pptpd</span></span><br><span class="line">ms-dns 8.8.8.8</span><br><span class="line">ms-dns 8.8.4.4</span><br></pre></td></tr></table></figure>账号设置<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vim /etc/ppp/chap-secrets</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">client server secret IP addresses</span></span><br><span class="line">vpn pptpd xxx 10.10.16.2</span><br></pre></td></tr></table></figure>重启vpn服务<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">service pptpd restart</span></span><br></pre></td></tr></table></figure></li><li>公网服务器A设置内网路由<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">sudo route add -net 10.10.1.0/24 gw 10.10.16.2 dev ppp0</span></span><br></pre></td></tr></table></figure></li><li>公网服务器设置转发规则<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; iptables -A POSTROUTING -s 10.10.16.0/24 ! -d 10.10.16.0/24 -j MASQUERADE</span><br><span class="line"> </span><br></pre></td></tr></table></figure></li><li>内网测试服务器B 安装vpn客户端<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; yum install pptpsetup pptp</span><br></pre></td></tr></table></figure></li><li>内网测试服务器B拨号<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pptpsetup --create test1 --server admin.wefit.com.cn --username vpn --password xxx --encrypt --start</span><br></pre></td></tr></table></figure></li><li>内网测试服务器B流量转发<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; iptables -A POSTROUTING -s 10.10.16.0/24 ! -d 10.10.16.0/24 -j MASQUERADE</span><br></pre></td></tr></table></figure></li><li>内网测试服务B FORWARD<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; iptables -I FORWARD -i ppp0 -o br0 -j ACCEPT</span><br></pre></td></tr></table></figure></li></ol><p>ps:</p><blockquote><p>如果客户端提示：<br>LCP: timeout sending Config-Requests<br>sudo modprobe nf_conntrack_pptp  </p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux命令行发送smtp邮件</title>
      <link href="/2015/07/16/linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%91%E9%80%81smtp%E9%82%AE%E4%BB%B6/"/>
      <url>/2015/07/16/linux%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%91%E9%80%81smtp%E9%82%AE%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>服务器需要通过邮件发送统计数据。<br>直接通过mail命令发送容易被当垃圾邮件。所以打算找一个靠谱的邮件服务商，通过smtp发送邮件就不会被当作垃圾邮件。<br>mail stmp配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/mail.rc</span><br><span class="line">＃append</span><br><span class="line">set from=xxx@zhangwenjin.com</span><br><span class="line">set smtp=smtp.zhangwenjin.com</span><br><span class="line">set smtp-auth-user=xxx@zhangwenjin.com</span><br><span class="line">set smtp-auth-password=xxxx</span><br></pre></td></tr></table></figure><p>发送方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;test&quot; | mail -v -s 四川统计-`date +&#x27;%Y-%m-%d&#x27;` -c cc1@zhangwenjin.com -c cc2@zhangwenjin.com to@zhangwenjin.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos使用LXC部署测试环境</title>
      <link href="/2015/07/09/centos%E4%BD%BF%E7%94%A8LXC%E9%83%A8%E7%BD%B2%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/"/>
      <url>/2015/07/09/centos%E4%BD%BF%E7%94%A8LXC%E9%83%A8%E7%BD%B2%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>测试服务器为centos7系统。<br>使用场景需求：<br>每一个开发人员有一个独立虚拟linux系统（系统要求centos6）（方便随便折腾）<br>虚拟系统需要独立内网ip</p><p>lxc是最优方案，对资源消耗最少，并且每台虚拟机可以共享所有资源。例如我们测试服务器有16G内存，每台虚拟机都能看到16G内存。<br>虚拟系统需要独立ip，需要使用桥接模式。</p><p>lxc安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">yum install lxc.x86_64 lxc-templates.x86_64</span></span><br></pre></td></tr></table></figure><p>guest系统安装：</p><ol><li><p>查看可选的系统：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="built_in">ls</span> /usr/share/lxc/templates</span></span><br><span class="line">lxc-alpine lxc-archlinux lxc-centos lxc-debian lxc-fedora lxc-openmandriva lxc-oracle lxc-sshd lxc-ubuntu-cloud</span><br><span class="line">lxc-altlinux lxc-busybox lxc-cirros lxc-download lxc-gentoo lxc-opensuse lxc-plamo lxc-ubuntu</span><br></pre></td></tr></table></figure></li><li><p>我需要的centos6， 模版中没有，选择下载系统：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&gt; lxc-create -t download -n template</span><br><span class="line">Setting up the GPG keyring</span><br><span class="line">Downloading the image index</span><br><span class="line"></span><br><span class="line">—</span><br><span class="line">DIST RELEASE ARCH VARIANT BUILD</span><br><span class="line">—</span><br><span class="line">centos 6 amd64 default 20150619_02:16</span><br><span class="line">centos 6 i386 default 20150619_02:16</span><br><span class="line">centos 7 amd64 default 20150619_02:16</span><br><span class="line">debian jessie amd64 default 20150619_19:16</span><br><span class="line">debian jessie armel default 20150620_22:42</span><br><span class="line">debian jessie armhf default 20150620_22:42</span><br><span class="line">debian jessie i386 default 20150619_19:16</span><br><span class="line">debian sid amd64 default 20150619_19:16</span><br><span class="line">debian sid armel default 20150620_22:42</span><br><span class="line">debian sid armhf default 20150620_22:42</span><br><span class="line">debian sid i386 default 20150619_19:16</span><br><span class="line">debian squeeze amd64 default 20150619_19:16</span><br><span class="line">debian squeeze armel default 20150620_22:42</span><br><span class="line">debian squeeze i386 default 20150619_19:16</span><br><span class="line">debian wheezy amd64 default 20150619_19:16</span><br><span class="line">debian wheezy armel default 20150620_22:42</span><br><span class="line">debian wheezy armhf default 20150620_22:42</span><br><span class="line">debian wheezy i386 default 20150619_19:16</span><br><span class="line">fedora 19 amd64 default 20150618_01:27</span><br><span class="line">fedora 19 armhf default 20150621_01:27</span><br><span class="line">fedora 19 i386 default 20150619_01:27</span><br><span class="line">fedora 20 amd64 default 20150619_01:27</span><br><span class="line">fedora 20 armhf default 20150621_01:27</span><br><span class="line">fedora 20 i386 default 20150619_01:27</span><br><span class="line">gentoo current amd64 default 20150619_14:12</span><br><span class="line">gentoo current armhf default 20150620_14:12</span><br><span class="line">gentoo current i386 default 20150619_14:12</span><br><span class="line">oracle 6.5 amd64 default 20150619_11:40</span><br><span class="line">oracle 6.5 i386 default 20150619_11:40</span><br><span class="line">plamo 5.x amd64 default 20150618_21:36</span><br><span class="line">plamo 5.x i386 default 20150618_21:36</span><br><span class="line">ubuntu precise amd64 default 20150619_19:15</span><br><span class="line">ubuntu precise armel default 20150621_03:49</span><br><span class="line">ubuntu precise armhf default 20150621_03:49</span><br><span class="line">ubuntu precise i386 default 20150619_19:15</span><br><span class="line">ubuntu trusty amd64 default 20150619_19:15</span><br><span class="line">ubuntu trusty arm64 default 20150604_03:49</span><br><span class="line">ubuntu trusty armhf default 20150621_03:49</span><br><span class="line">ubuntu trusty i386 default 20150619_03:49</span><br><span class="line">ubuntu trusty ppc64el default 20150621_03:49</span><br><span class="line">ubuntu utopic amd64 default 20150619_19:15</span><br><span class="line">ubuntu utopic arm64 default 20150605_03:49</span><br><span class="line">ubuntu utopic armhf default 20150621_03:49</span><br><span class="line">ubuntu utopic i386 default 20150619_19:15</span><br><span class="line">ubuntu utopic ppc64el default 20150621_03:49</span><br><span class="line">ubuntu vivid amd64 default 20150619_19:15</span><br><span class="line">ubuntu vivid arm64 default 20150604_03:49</span><br><span class="line">ubuntu vivid armhf default 20150621_03:49</span><br><span class="line">ubuntu vivid i386 default 20150619_19:15</span><br><span class="line">ubuntu vivid ppc64el default 20150621_03:49</span><br><span class="line">ubuntu wily amd64 default 20150619_03:49</span><br><span class="line">ubuntu wily arm64 default 20150604_03:49</span><br><span class="line">ubuntu wily armhf default 20150621_03:49</span><br><span class="line">ubuntu wily i386 default 20150619_19:15</span><br><span class="line">ubuntu wily ppc64el default 20150621_03:49</span><br><span class="line">—</span><br><span class="line"></span><br><span class="line">Distribution:</span><br></pre></td></tr></table></figure></li><li><p>等待系统下载完成</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">lxc-ls</span></span><br><span class="line">template</span><br></pre></td></tr></table></figure></li><li><p>设置桥接模式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vim /etc/sysconfig/network-scripts/ifcfg-enp3s0f0</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">DEVICE=enp3s0f0</span><br><span class="line">ONBOOT=yes # 开机自动启动</span><br><span class="line">BRIDGE=br0 # 这是重点，不用设置ip, 需要新增br0网桥</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vim /etc/sysconfig/network-scripts/ifcfg-br0</span></span><br><span class="line">DEVICE=br0</span><br><span class="line">TYPE=Bridge #网桥</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=dhcp ＃使用dhcp获取ip</span><br></pre></td></tr></table></figure></li><li><p>设置虚拟机配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">/var/lib/lxc/template/config</span></span><br><span class="line">lxc.arch = x86_64</span><br><span class="line">lxc.rootfs = /var/lib/lxc/template/rootfs</span><br><span class="line">lxc.utsname = template</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Network configuration</span></span><br><span class="line">lxc.network.type = veth #桥接</span><br><span class="line">lxc.network.flags = up #开机启动</span><br><span class="line">lxc.network.link=br0 #桥接网桥</span><br><span class="line">lxc.network.hwaddr=00:00:00:00:00:02 #一定要设置，方便dhcp设置</span><br><span class="line"></span><br><span class="line">lxc.start.auto = 1</span><br><span class="line">lxc.start.delay = 5</span><br><span class="line">lxc.start.order = 100</span><br></pre></td></tr></table></figure></li><li><p>启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; lxc-start -n template</span><br><span class="line">进入虚拟机，查看虚拟机ip</span><br></pre></td></tr></table></figure></li><li><p>创建更多虚拟机</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; lxc-clone template test</span><br></pre></td></tr></table></figure></li><li><p>查看每台虚拟机使用情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; lxc-top</span><br></pre></td></tr></table></figure><p>ps:</p><blockquote><p>虚拟机根目录：&#x2F;var&#x2F;lib&#x2F;lxc&#x2F;template&#x2F;rootfs<br>改变虚拟机账户密码： chroot &#x2F;var&#x2F;lib&#x2F;lxc&#x2F;template&#x2F;rootfs passwd</p></blockquote></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac Mini 安装centos系统</title>
      <link href="/2015/07/03/Mac-Mini-%E5%AE%89%E8%A3%85centos%E7%B3%BB%E7%BB%9F/"/>
      <url>/2015/07/03/Mac-Mini-%E5%AE%89%E8%A3%85centos%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>准备把Mac Mini改造为测试服务器。线上环境是Centos6, 所以测试环境也需要安装为Centos 6。Mac OSX 系统需要完全废弃。<br>Mac Mini使用EFI引导，只有Centos 7才支持EFI，所以考虑Mac Mini 安装Centos 7，通过lxc虚拟Centos 6</p><h3 id="安装步骤："><a href="#安装步骤：" class="headerlink" title="安装步骤："></a>安装步骤：</h3><ol><li>下载Centos(下载地址<a href="http://www.centos.org/download/)%EF%BC%9A">http://www.centos.org/download/)：</a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://isoredirect.centos.org/centos/7/isos/x86_64/CentOS-7-x86_64-Minimal-1503-01.iso</span><br></pre></td></tr></table></figure></li><li>转化镜像为Mac专用镜像模式(需要Mac 电脑)<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdiutil convert -format UDRW -o ~/Downloads/CentOS-7-x86_64-Minimal-1503-01.img ~/Downloads/CentOS-7-x86_64-Minimal-1503-01.iso</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>正在读取CentOS-7- （Apple_ISO：0）…<br>…………………………………………………………………………………………………………………………………………………………………………………………………………<br>正在读取（Apple_Free：1）…<br>经过时间： 1.236s<br>速度：309.6M 字节&#x2F;秒<br>节省：0.0%</p></blockquote><ol start="3"><li><p>插入空白U盘，查看系统u盘设备描述符：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">diskutil list</span></span><br><span class="line">/dev/disk0</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">: TYPE NAME SIZE IDENTIFIER</span></span><br><span class="line">0: GUID_partition_scheme *251.0 GB disk0</span><br><span class="line">1: EFI EFI 209.7 MB disk0s1</span><br><span class="line">2: Apple_CoreStorage 250.1 GB disk0s2</span><br><span class="line">3: Apple_Boot Recovery HD 650.0 MB disk0s3</span><br><span class="line">/dev/disk1</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">: TYPE NAME SIZE IDENTIFIER</span></span><br><span class="line">0: Apple_HFS Macintosh HD *249.8 GB disk1</span><br><span class="line">Logical Volume on disk0s2</span><br><span class="line">D438A9A0-0FF5-41F0-BB46-4E9A41133503</span><br><span class="line">Unencrypted</span><br><span class="line">/dev/disk2</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">: TYPE NAME SIZE IDENTIFIER</span></span><br><span class="line">0: FDisk_partition_scheme *7.8 GB disk2</span><br><span class="line">1: DOS_FAT_32 NO NAME 7.8 GB disk2s1</span><br></pre></td></tr></table></figure></li><li><p>U盘为&#x2F;dev&#x2F;disk2，取消U盘挂载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; diskutil unmountDisk /dev/disk2</span><br><span class="line">Unmount of all volumes on disk2 was successful</span><br></pre></td></tr></table></figure></li><li><p>将Centos系统写入U盘</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">sudo <span class="built_in">dd</span> <span class="keyword">if</span>=~/Downloads/CentOS-7-x86_64-Minimal-1503-01.img.dmg of=/dev/disk2 bs=1m</span></span><br></pre></td></tr></table></figure></li><li><p>取出u盘插入Mac Mini系统，开机按住 option(alt) 键（必须在出现苹果图标前按住），这时候能看到U盘系统，选择U盘启动，安装linux时候格式化硬盘全盘。</p></li></ol><p>ps:</p><blockquote><p>Centos 7安装lxc需要先安装EPEL源，默认的yum源没有lxc<br>Mac Mini需要恢复OSX系统，需要通过网络安装恢复，方法开机按 alt键，到选择界面 按cmd + r即可，非常容易</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rpm包制作</title>
      <link href="/2014/08/17/rpm%E5%8C%85%E5%88%B6%E4%BD%9C/"/>
      <url>/2014/08/17/rpm%E5%8C%85%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<ol><li><p>设置打包目录<br>a) 查看当前设置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpmbuild --showrc | grep topdir</span><br></pre></td></tr></table></figure><p>b) 设置目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.rpmmacros</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">_topdir /root/src/rpmbuild</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="built_in">mkdir</span> rpmbuild</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="built_in">cd</span> ./rpmbuild</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="built_in">mkdir</span> -pv &#123;BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>拷贝源代码source 目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash"><span class="built_in">cp</span>  /root/src/tengine-2.0.3.tar.gz SOURCES/</span></span><br></pre></td></tr></table></figure></li><li><p>建立spec文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash"><span class="built_in">cd</span> SPECS</span></span><br><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">vim tengine-2.0.3.spec</span></span><br><span class="line">Name: tengine</span><br><span class="line">Version: 2.0.3</span><br><span class="line">Release: 1%&#123;?dist&#125;</span><br><span class="line">Summary: tengine from Taobao</span><br><span class="line"></span><br><span class="line">Group: System Environment/Daemons</span><br><span class="line">License: GPLv2</span><br><span class="line">URL: http://blog.zhangwenjin.com</span><br><span class="line">Source0: %&#123;name&#125;-%&#123;version&#125;.tar.gz</span><br><span class="line">BuildRoot: %(mktemp -ud %&#123;_tmppath&#125;/%&#123;name&#125;-%&#123;version&#125;-%&#123;release&#125;-XXXXXX)</span><br><span class="line"></span><br><span class="line">BuildRequires: gcc,make</span><br><span class="line">Requires: openssl,pcre,pcre-devel,lua,lua-devel</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">description</span></span><br><span class="line">It is a Nginx from Taobao.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">prep</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">setup -q</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">build</span></span><br><span class="line">./configure --with-http_lua_module --with-pcre --user=nginx --group=nginx</span><br><span class="line">make %&#123;?_smp_mflags&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">install</span></span><br><span class="line">rm -rf %&#123;buildroot&#125;</span><br><span class="line">make install DESTDIR=%&#123;buildroot&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">clean</span></span><br><span class="line">rm -rf %&#123;buildroot&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">files</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">defattr(-,root,root,-)</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">doc</span></span><br></pre></td></tr></table></figure></li><li><p>rpmbuild 打包</p></li></ol><p>rpmbuild </p><ul><li>-ba 既生成src.rpm又生成二进制rpm </li><li>-bs 只生成src的rpm </li><li>-bb 只生二进制的rpm </li><li>-bp 执行到pre </li><li>-bc 执行到 build段 </li><li>-bi 执行install段 </li><li>-bl 检测有文件没包含</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt; </span><span class="language-bash">rpmbuild -bb tengine-2.0.3.spec</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>debian 离线安装包</title>
      <link href="/2014/04/26/debian-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8C%85/"/>
      <url>/2014/04/26/debian-%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p>应用场景：<br>很多相同机器需要安装同样的软件包，全部通过apt-get网络安装很不划算。<br>可以考虑把同步服务器的安装包作为apt-get的离线源。</p><p>步骤：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装打包工具</span></span><br><span class="line">apt-get install dpkg-dev</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">生成离线目录</span></span><br><span class="line">mkdir offlinePackage</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">复制所有apt-get已有软件包</span></span><br><span class="line">cp -r /var/cache/apt/archives  /offlinePackage</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">更改文件权限</span></span><br><span class="line">chmod 777 -R /offlinPackage/</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">建立deb包依赖关系</span></span><br><span class="line">dpkg-scanpackages /offlinePackage/ /dev/null |gzip &gt;/offlinePackage/Packages.gz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将生成的Packages.gz包复制到和deb同目录下</span></span><br><span class="line">cp /offlinePackage/Packages.gz /offlinePackage/archives/Packages.gz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">打包快速传输</span></span><br><span class="line">tar cvzf offlinePackage.tar.gz offlinePackage/</span><br></pre></td></tr></table></figure><p>其他机器使用方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/apt/sources.list</span><br><span class="line">添加以下两行至文件末尾：</span><br><span class="line">deb file:///offlinePackage archives/</span><br><span class="line">deb-src file:///offlinePackage archives/</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">将所有的其他deb全部注销掉（<span class="comment">#）</span></span></span><br><span class="line">apt-get update</span><br><span class="line">sudo apt-get  install XXXXX</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> LINUX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php 迭代的一种写法</title>
      <link href="/2011/02/22/php-%E8%BF%AD%E4%BB%A3%E7%9A%84%E4%B8%80%E7%A7%8D%E5%86%99%E6%B3%95/"/>
      <url>/2011/02/22/php-%E8%BF%AD%E4%BB%A3%E7%9A%84%E4%B8%80%E7%A7%8D%E5%86%99%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fib</span> <span class="keyword">implements</span> <span class="title">Iterator</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> <span class="variable">$a</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="variable">$b</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> <span class="variable">$max</span> = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$n</span>=<span class="number">100</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;max = <span class="variable">$n</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">rewind</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;a = <span class="number">0</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;b = <span class="number">1</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">next</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable">$tmp</span> = <span class="variable language_">$this</span>-&gt;a + <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;a = <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;b = <span class="variable">$tmp</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;i = <span class="variable language_">$this</span>-&gt;i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">current</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">key</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">valid</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;b &lt; <span class="variable language_">$this</span>-&gt;max;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Fib</span>(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$k</span>=&gt;<span class="variable">$v</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%d\t%d\n&quot;</span>, <span class="variable">$k</span>, <span class="variable">$v</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>git地址：<a href="https://gist.github.com/wjzhangq/838433">https://gist.github.com/wjzhangq/838433</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cross-Origin Resource Sharing 实现ajax的跨域请求</title>
      <link href="/2010/11/23/Cross-Origin-Resource-Sharing-%E5%AE%9E%E7%8E%B0ajax%E7%9A%84%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/"/>
      <url>/2010/11/23/Cross-Origin-Resource-Sharing-%E5%AE%9E%E7%8E%B0ajax%E7%9A%84%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<p>转载:<a href="http://blog.csdn.net/net_lover/archive/2010/01/11/5172509.aspx">http://blog.csdn.net/net_lover/archive/2010/01/11/5172509.aspx</a><br>Cross-Origin Resource Sharing 跨域资源共享，该规范地址：<a href="http://www.w3.org/TR/access-control/%E5%92%8Chttp://dev.w3.org/2006/waf/access-control/">http://www.w3.org/TR/access-control/和http://dev.w3.org/2006/waf/access-control/</a><br>该规范提供了一种更安全的跨域数据交换方法。具体规范的介绍可以访问上面提供的网站地址。值得注意的是：该规范只能应用在类似 XMLHttprequest 这样的 API 容器内。IE8、Firefox 3.5 及其以后的版本、Chrome浏览器、Safari 4 等已经实现了 Cross-Origin Resource Sharing 规范，已经可以进行跨域请求了。<br>最新版本的浏览器中,跨域ajax请求时候,浏览也会向服务器发送请求,当服务器响应头部设置了Access-Control-Allow-Origin项,那么ajax请求能正确完成.</p><p>Request Header:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Origin:http://localhost</span><br><span class="line">Referer:http://localhost/cross/cross.html</span><br><span class="line">User-Agent:Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_8; en-US) AppleWebKit/534.3 (KHTML, like Gecko) Chrome/6.0.472.53 Safari/534.3</span><br></pre></td></tr></table></figure><p>Response Headers:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin:http://localhost</span><br><span class="line">Server:Apache/2.2.16 (Unix) mod_ssl/2.2.16 OpenSSL/1.0.0a DAV/2 PHP/5.3.3</span><br><span class="line">X-Powered-By:PHP/5.3.3</span><br></pre></td></tr></table></figure><p>php 代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(“Access-Control-Allow-<span class="attr">Origin</span>: <span class="attr">http</span>://localhost”);</span><br><span class="line"><span class="keyword">echo</span> ‘cross is ok’;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
